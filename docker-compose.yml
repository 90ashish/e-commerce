services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - '2181:2181'

  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      # connect to ZooKeeper
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      # allow PLAINTEXT listeners
      - ALLOW_PLAINTEXT_LISTENER=yes
      # broker listens on all interfaces
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092
      # tells clients (other containers) to use kafka:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    ports:
      - '9092:9092'

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.0
    container_name: schema-registry
    depends_on:
      - kafka
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=PLAINTEXT://kafka:9092
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
    ports:
      - '8081:8081'

  order-service:
    build:
      context: .
      dockerfile: docker/order/Dockerfile
    image: e-commerce/order:latest
    container_name: order-service
    depends_on:
      - kafka
    ports:
      - '8090:8090'
    environment:
      - APP_KAFKA_BROKERS=kafka:9092

  inventory-service:
    build:
      context: .
      dockerfile: docker/inventory/Dockerfile
    image: e-commerce/inventory:latest
    container_name: inventory-service
    depends_on:
      - kafka
    environment:
      - APP_KAFKA_BROKERS=kafka:9092
       
  notification-service:
    build:
      context: .
      dockerfile: docker/notification/Dockerfile
    image: e-commerce/notification:latest
    container_name: notification-service
    depends_on:
      - kafka
    environment:
      - APP_KAFKA_BROKERS=kafka:9092